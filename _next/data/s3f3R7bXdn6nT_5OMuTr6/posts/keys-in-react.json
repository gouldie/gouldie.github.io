{"pageProps":{"mdxSource":{"compiledSource":"/*@jsxRuntime automatic @jsxImportSource react*/\nconst {Fragment: _Fragment, jsx: _jsx, jsxs: _jsxs} = arguments[0];\nconst {useMDXComponents: _provideComponents} = arguments[0];\nfunction _createMdxContent(props) {\n  const _components = Object.assign({\n    h1: \"h1\",\n    h2: \"h2\",\n    h3: \"h3\",\n    p: \"p\",\n    code: \"code\",\n    ul: \"ul\",\n    li: \"li\",\n    pre: \"pre\",\n    span: \"span\"\n  }, _provideComponents(), props.components), {PostImage, StockManagement} = _components;\n  if (!PostImage) _missingMdxReference(\"PostImage\", true);\n  if (!StockManagement) _missingMdxReference(\"StockManagement\", true);\n  return _jsxs(_Fragment, {\n    children: [_jsx(_components.h1, {\n      children: \"React - Keys\"\n    }), \"\\n\", _jsx(_components.h2, {\n      children: \"Why using an index is sometimes not enough\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Keys - what actually are they?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"When rendering a list, it is best practice to provide a key attribute to each list item to help\\nReact uniquely identify it. This allows React to keep track of each list item and ensures that,\\nbetween each render, the internal state of each list item is preserved.\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Fail to provide a key and React will give you a warning. Many code-analysis tools such as ESLint\\nwill also show a warning. Without a key, React will default to using indexes.\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Typically, a unique ID from your data set should be used. Developers will often use an index for\\nconvenience as it is provided by the \", _jsx(_components.code, {\n        children: \"map\"\n      }), \" function.\"]\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"Why using an index is sometimes not enough\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"So, you've provided the index as a key. Warnings have disappeared. What could go wrong?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Here is a simple stock management app. It displays a list of products and the number of stock\\navailable for each one. It has two main features:\"\n    }), \"\\n\", _jsxs(_components.ul, {\n      children: [\"\\n\", _jsx(_components.li, {\n        children: \"The user can update the stock for a particular product\"\n      }), \"\\n\", _jsx(_components.li, {\n        children: \"The user can shuffle the order of the products\"\n      }), \"\\n\"]\n    }), \"\\n\", _jsx(PostImage, {\n      src: \"/images/keys-1.png\",\n      alt: \"Stock management app\",\n      width: \"100px\"\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Product data is initialised in memory within \", _jsx(_components.code, {\n        children: \"data.json\"\n      }), \". In a real-world scenario, this would\\nlikely come from a database. \", _jsx(_components.code, {\n        children: \"<Stock />\"\n      }), \" iterates through the products, rendering a \", _jsx(_components.code, {\n        children: \"<Product />\"\n      }), \"\\nfor each one. Each \", _jsx(_components.code, {\n        children: \"<Product />\"\n      }), \" has its own local state for updating the stock number. Also note\\nthat each \", _jsx(_components.code, {\n        children: \"<Product />\"\n      }), \" is given the index as its key.\"]\n    }), \"\\n\", _jsx(StockManagement, {}), \"\\n\", _jsx(_components.p, {\n      children: \"When shuffling the list, you can see that a product could end up in a different position and thus be\\ngiven a different key. The result of this is that keys no longer uniquely identify a product, and\\ntherefore React can no longer uniquely identify each product. State becomes corrupt.\"\n    }), \"\\n\", _jsx(_components.h3, {\n      children: \"So what's the solution?\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Ensure each item has unique identifier. If it's a database resource, it may already have a unique id\\nyou can use.\"\n    }), \"\\n\", _jsx(_components.pre, {\n      children: _jsxs(_components.code, {\n        className: \"hljs language-json\",\n        children: [_jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"[\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"id\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Milk\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"stock\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"5\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"id\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"2\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Bread\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"stock\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"8\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"id\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Cheese\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"stock\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"3\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"{\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"id\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"4\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"name\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-string\",\n          children: \"\\\"Eggs\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \",\"\n        }), \"\\n    \", _jsx(_components.span, {\n          className: \"hljs-attr\",\n          children: \"\\\"stock\\\"\"\n        }), _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \":\"\n        }), \" \", _jsx(_components.span, {\n          className: \"hljs-number\",\n          children: \"1\"\n        }), \"\\n  \", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"}\"\n        }), \"\\n\", _jsx(_components.span, {\n          className: \"hljs-punctuation\",\n          children: \"]\"\n        }), \"\\n\"]\n      })\n    }), \"\\n\", _jsxs(_components.p, {\n      children: [\"Use the unique identifier as the key rather than the index. In the above code editor, try giving\\neach product a unique id and assigning that id as the key for each \", _jsx(_components.code, {\n        children: \"<Product />\"\n      }), \".\"]\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"Finally, React should now be able to track each list item correctly.\"\n    }), \"\\n\", _jsx(PostImage, {\n      src: \"/images/keys-7.gif\",\n      alt: \"Correct state using ids as keys\",\n      width: \"100px\"\n    }), \"\\n\", _jsx(_components.p, {\n      children: \"tl;dr - only use indexes as keys if you are sure the list order and length will not change. If in\\ndoubt, use a unique identifier.\"\n    })]\n  });\n}\nfunction MDXContent(props = {}) {\n  const {wrapper: MDXLayout} = Object.assign({}, _provideComponents(), props.components);\n  return MDXLayout ? _jsx(MDXLayout, Object.assign({}, props, {\n    children: _jsx(_createMdxContent, props)\n  })) : _createMdxContent(props);\n}\nreturn {\n  default: MDXContent\n};\nfunction _missingMdxReference(id, component) {\n  throw new Error(\"Expected \" + (component ? \"component\" : \"object\") + \" `\" + id + \"` to be defined: you likely forgot to import, pass, or provide it.\");\n}\n","frontmatter":{},"scope":{}},"frontMatter":{"slug":"keys-in-react","title":"Keys in React: How do they work?","subtitle":"Why using an index is sometimes not enough","description":"What are keys in React? What is their purpose, why are they important and why using an index is sometimes not enough."}},"__N_SSG":true}